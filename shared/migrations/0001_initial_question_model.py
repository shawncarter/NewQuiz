# Generated by Django 5.2.4 on 2025-07-26 13:25

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField()),
                ('choices', models.JSONField()),
                ('correct_answer', models.CharField(max_length=255)),
                ('question_type', models.CharField(choices=[('general', 'General Knowledge'), ('specialist', 'Specialist Subject')], default='general', max_length=20)),
                ('category', models.CharField(blank=True, help_text='Category for general questions', max_length=100)),
                ('difficulty', models.CharField(blank=True, choices=[('easy', 'Easy'), ('medium', 'Medium'), ('hard', 'Hard')], default='medium', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('usage_count', models.IntegerField(default=0)),
                ('is_ai_generated', models.BooleanField(default=False)),
                ('subject', models.ForeignKey(blank=True, help_text='Subject for specialist questions', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='shared.subject')),
            ],
            options={
                'ordering': ['usage_count', 'last_used'],
                'indexes': [models.Index(fields=['question_type', 'category', 'usage_count', 'last_used'], name='shared_ques_questio_a946cd_idx'), models.Index(fields=['question_type', 'subject', 'usage_count', 'last_used'], name='shared_ques_questio_f2e74f_idx'), models.Index(fields=['subject', 'difficulty'], name='shared_ques_subject_a38221_idx'), models.Index(fields=['last_used'], name='shared_ques_last_us_811c93_idx'), models.Index(fields=['usage_count'], name='shared_ques_usage_c_748ba5_idx')],
                'constraints': [models.CheckConstraint(condition=models.Q(models.Q(('question_type', 'general'), models.Q(('category', ''), _negated=True)), models.Q(('question_type', 'specialist'), ('subject__isnull', False)), _connector='OR'), name='question_type_category_subject_consistency'), models.UniqueConstraint(condition=models.Q(('question_type', 'general')), fields=('question_text', 'question_type', 'category'), name='unique_general_question_text'), models.UniqueConstraint(condition=models.Q(('question_type', 'specialist')), fields=('question_text', 'question_type', 'subject'), name='unique_specialist_question_text')],
            },
        ),
    ]
