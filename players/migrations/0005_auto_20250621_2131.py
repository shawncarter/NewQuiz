# Generated by Django 5.2.3 on 2025-06-21 21:31

from django.db import migrations
from django.db.models import Sum


def populate_current_scores(apps, _schema_editor):
    """
    Updates each Player's current_score field to the sum of points_awarded from all related PlayerAnswer records.
    
    For every Player instance, calculates the total points awarded based on associated PlayerAnswer entries and saves the result to the current_score field. If a player has no related answers, current_score is set to 0.
    """
    Player = apps.get_model('players', 'Player')
    PlayerAnswer = apps.get_model('players', 'PlayerAnswer')

    for player in Player.objects.all():
        total_score = PlayerAnswer.objects.filter(
            player=player
        ).aggregate(total=Sum('points_awarded'))['total'] or 0

        player.current_score = total_score
        player.save()


def reverse_populate_current_scores(apps, _schema_editor):
    """
    Resets the `current_score` field to 0 for all Player instances during migration rollback.
    """
    Player = apps.get_model('players', 'Player')
    Player.objects.update(current_score=0)


class Migration(migrations.Migration):

    dependencies = [
        ('players', '0004_alter_playeranswer_unique_together_and_more'),
    ]

    operations = [
        migrations.RunPython(populate_current_scores, reverse_populate_current_scores),
    ]
